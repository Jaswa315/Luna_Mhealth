# Lint and Testing pipeline for Luna mHealth
# This pipeline does the following:
#   1. Installs Flutter on the agent
#   2. Gets Flutter packages for core
#   3. Runs flutter analyze on the 3 modules
#   4. Rune tests on luna_core
#   5. Installs packages for luna_authoring_system
#   6. Runs tests on luna authoring agent

trigger: none

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    git clone https://github.com/flutter/flutter.git -b stable
    echo "##vso[task.setvariable variable=PATH]${PATH}:`pwd`/flutter/bin"
  displayName: 'Install Flutter SDK'

- script: |
    cd $(lunacore)
    flutter pub get
    flutter pub global activate junitreport 
    echo "##vso[task.setvariable variable=PATH]${PATH}:$HOME/.pub-cache/bin"
  displayName: 'Get Flutter packages for core module'

- script: |
    cd $(lunacore)
    flutter analyze
    if [[ $? -eq 1 ]]; then
      echo "##vso[task.logissue type=error]Luna_core Linting issues found!"
      echo '##vso[task.complete result=Failed]'
      exit 0
    fi
  displayName: 'Lint luna_core code'
  condition: succeededOrFailed()

- script: |
    cd $(lunamobile)
    flutter analyze
    if [[ $? -eq 1 ]]; then
      echo "##vso[task.logissue type=error]Luna_mobile Linting issues found!"
      echo '##vso[task.complete result=Failed]'
      exit 0
    fi
  displayName: 'Lint luna_mhealth_mobile code'
  condition: succeededOrFailed()

- script: |
    cd $(lunaauthoring)
    flutter analyze
    if [[ $? -eq 1 ]]; then
      echo "##vso[task.logissue type=error]Luna_authoring Linting issues found!"
      echo '##vso[task.complete result=Failed]'
      exit 0
    fi
  displayName: 'Lint luna_authoring code'
  condition: succeededOrFailed()

#- script: |
#    grep -r -n "[\/#] *[Tt][oO][Dd][oO]" $(lunacore) $(lunaauthoring) $(lunamobile)
#    if [[ $? -eq 0 ]]; then
#      echo "##vso[task.logissue type=error]TODOs found!"
#      echo '##vso[task.complete result=Failed]'
#      exit 0
#    fi
#  displayName: 'Search for TODOs'
#  failOnStderr: true
#  condition: succeededOrFailed()

- script: |
    cd $(lunacore)
    flutter test --machine | tojunit --output ../test-core-results.xml
  displayName: 'Run luna_core tests'
  condition: succeededOrFailed()

- script: |
    cd $(lunaauthoring)
    flutter pub get
  displayName: 'Get Flutter packages for the luna authoring system'
  condition: succeededOrFailed()

- script: |
    cd $(lunaauthoring)
    flutter test --machine | tojunit --output ../test-authoring-results.xml
  displayName: 'Run luna_authoring_system tests'
  condition: succeededOrFailed()

- task: PublishTestResults@2
  displayName: 'Publish test results'
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish Flutter Test Results'
    failTaskOnFailedTests: true
